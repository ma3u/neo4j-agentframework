# Docker Compose for Azure Container Apps Environment
# Optimized for Microsoft Agent Framework + Neo4j RAG integration

version: '3.8'

services:
  neo4j-azure:
    image: neo4j:5.11
    container_name: neo4j-azure-rag
    restart: unless-stopped
    environment:
      # Authentication
      NEO4J_AUTH: neo4j/password
      
      # Production Memory Configuration (Azure optimized)
      NEO4J_dbms_memory_heap_initial__size: 4G
      NEO4J_dbms_memory_heap_max__size: 6G
      NEO4J_dbms_memory_pagecache_size: 3G
      
      # Connection Pool Optimization for Agent Framework
      NEO4J_dbms_connector_bolt_thread__pool__min__size: 10
      NEO4J_dbms_connector_bolt_thread__pool__max__size: 500
      NEO4J_dbms_connector_bolt_thread__pool__keep__alive: 10m
      
      # Query Performance for RAG workloads
      NEO4J_dbms_query_cache_size: 2000
      NEO4J_dbms_logs_query_enabled: INFO
      NEO4J_dbms_logs_query_threshold: 500ms
      
      # Transaction Settings for high concurrency
      NEO4J_dbms_transaction_timeout: 120s
      NEO4J_dbms_transaction_concurrent_maximum: 2000
      
      # Enable APOC and GDS for advanced operations
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: "gds.*,apoc.*"
      
      # Vector Search Optimizations
      NEO4J_dbms_index_default_schema_provider: range-1.0
      NEO4J_dbms_index_fulltext_default_analyzer: standard-no-stop-words
      
      # Monitoring and Observability
      NEO4J_metrics_enabled: true
      NEO4J_metrics_csv_enabled: true
      NEO4J_metrics_csv_interval: 60s
      
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    volumes:
      - neo4j_azure_data:/data
      - neo4j_azure_logs:/logs
      - neo4j_azure_import:/var/lib/neo4j/import
      - ./neo4j-conf:/conf
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1 as health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 6G
          cpus: '2.0'
    networks:
      - azure-rag-network

  neo4j-rag-agent:
    build:
      context: ..
      dockerfile: azure/Dockerfile.agent
    container_name: neo4j-rag-agent-azure
    restart: unless-stopped
    environment:
      # Neo4j Connection (internal network)
      NEO4J_URI: bolt://neo4j-azure:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
      
      # Azure AI Configuration (from environment/Key Vault)
      AZURE_AI_PROJECT_ENDPOINT: ${AZURE_AI_PROJECT_ENDPOINT}
      AZURE_AI_MODEL_DEPLOYMENT_NAME: ${AZURE_AI_MODEL_DEPLOYMENT_NAME}
      
      # Authentication Method
      AZURE_CLI_AUTH: "true"
      
      # Application Configuration
      PYTHONPATH: /app
      LOG_LEVEL: INFO
      
      # Performance Tuning
      WORKERS: 4
      MAX_CONNECTIONS: 100
      
    ports:
      - "8000:8000"
    depends_on:
      neo4j-azure:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    networks:
      - azure-rag-network

  # Optional: Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-azure
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - azure-rag-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-azure
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - azure-rag-network
    profiles:
      - monitoring

volumes:
  neo4j_azure_data:
    driver: local
  neo4j_azure_logs:
    driver: local
  neo4j_azure_import:
    driver: local
  grafana_data:
    driver: local

networks:
  azure-rag-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16