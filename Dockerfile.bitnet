# BitNet B1.58 optimized Dockerfile for Azure Container Apps
# Ultra-low memory usage (0.4GB) with CPU-efficient inference

FROM python:3.11-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt .

# Install BitNet-optimized dependencies
RUN pip install --no-cache-dir --user torch --index-url https://download.pytorch.org/whl/cpu && \
    pip install --no-cache-dir --user transformers accelerate && \
    pip install --no-cache-dir --user psutil

# Runtime stage
FROM python:3.11-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local
ENV PATH=/root/.local/bin:$PATH

# Copy BitNet LLM module
COPY azure/bitnet_llm.py ./azure/
COPY azure/app.py ./azure/
COPY azure/config.py ./azure/
COPY azure/agent_service.py ./azure/
COPY src/ ./src/

# Create necessary directories
RUN mkdir -p /app/models /app/logs

# Environment variables for BitNet optimization
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV BITNET_MODE=true
ENV LLM_BACKEND=bitnet
ENV BITNET_MODEL=bitnet-b1-58-2b
ENV INFERENCE_MODE=cpu
ENV QUANTIZATION=1.58bit

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Expose BitNet LLM service port
EXPOSE 8001

# Run BitNet LLM service
CMD ["python", "-m", "uvicorn", "azure.bitnet_llm:app", "--host", "0.0.0.0", "--port", "8001", "--workers", "1"]